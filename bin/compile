#!/bin/bash
# bin/compile <build-dir> <cache-dir>

# Fail immediately on non-zero exit code.
set -e
# Fail immediately on non-zero exit code within a pipeline.
set -o pipefail
# Fail on undeclared variables.
set -u
# Debug, echo every command
#set -x

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

BUILD_DIR=$1
CACHE_DIR=$2
BP_DIR=`cd $(dirname $0); cd ..; pwd`

terraform_bin="$BUILD_DIR/bin/terraform"
terragrunt_bin="$BUILD_DIR/bin/terragrunt"

if [ ! -s $BUILD_DIR/.terraform_url ] || [ ! -s $BUILD_DIR/.terragrunt_url ]; then
  echo "File .terraform_url or .terragrunt_url is empty, skipping..." | indent
  exit 0
fi

while read url; do
  if [ -n "$url" ]; then
    topic "Installing Terraform from ${url}"
    curl -s -L $url > $BUILD_DIR/bin/terraform.zip
    cd $BUILD_DIR/bin && unzip terraform.zip && rm terraform.zip
    chmod +x "$terraform_bin"
  fi
done < $BUILD_DIR/.terraform_url

while read url; do
  if [ -n "$url" ]; then
    topic "Installing Terragrunt from ${url}"
    curl -s -L $url > $BUILD_DIR/bin/terragrunt
    chmod +x "$terragrunt_bin"
  fi
done < $BUILD_DIR/.terragrunt_url

topic 'Setting up $PATH'
mkdir -p "$BUILD_DIR/.profile.d"
cp $BP_DIR/.profile.d/* $BUILD_DIR/.profile.d/
